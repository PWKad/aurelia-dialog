{"version":3,"sources":["demo.js"],"names":[],"mappings":";;;8BAGa,IAAI;;;;;;;;;;mCAHT,QAAQ;;6CACR,YAAY;;;AAEP,UAAI;;;AAkBJ,iBAlBA,IAAI,CAkBH,OAAO,EAAE;gCAlBV,IAAI;;eAEf,SAAS,GAAG,QAAQ;eAEpB,WAAW,GAAG,CACZ,EAAC,KAAK,EAAC,MAAM,EAAC,EACd,EAAC,KAAK,EAAC,MAAM,EAAC,EACd,EAAC,KAAK,EAAC,OAAO,EAAC,EACf,EAAC,KAAK,EAAC,KAAK,EAAC,EACb,EAAC,KAAK,EAAC,QAAQ,EAAC,EAChB,EAAC,KAAK,EAAC,SAAS,EAAC,EACjB,EAAC,KAAK,EAAC,UAAU,EAAC,CACnB;;;;;;AAOC,cAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACxB;;8BApBU,IAAI;;uBAcd,QAAQ;;mBAA0B,SAAS;;;;;uBAC3C,QAAQ;;mBAA0B,SAAS;;;;;iBAOpC,oBAAE;;AAIR,sBAAU,CAAC;qBAAI,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;aAAA,EAAC,GAAG,CAAC,CAAC;WACjE;;;iBAES,oBAAC,IAAI,EAAE;;AAEf,gBAAG,IAAI,CAAC,IAAI,CAAC,EAAE;AACb,kBAAI,CAAC,IAAI,CAAC,CAAC,UAAU,GAAG,OAAO,GAAC,IAAI,CAAC,sBAAsB,GAAG,cAAc,GAAC,IAAI,CAAC,sBAAsB,CAAC;AACzG,kBAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;aACnB;WACF;;;iBAEU,uBAAE;AACX,iBAAK,CAAC,mBAAmB,CAAC,CAAC;WAC5B;;;iBAEc,2BAAE;AACf,iBAAK,CAAC,wBAAwB,CAAC,CAAC;WACjC;;;iBA1Be,CAAC,OAAO,CAAC;;;;eAjBd,IAAI;;;sBAAJ,IAAI","file":"demo.js","sourceRoot":"/source/","sourcesContent":["import {bindable} from 'aurelia-framework';\nimport {SmoothScroll} from 'components/smooth-scroll';\n\nexport class Demo{\n\n  testtitle = \"FooBar\";\n\n  transitions = [\n    {value:\"fade\"},\n    {value:\"left\"},\n    {value:\"right\"},\n    {value:\"top\"},\n    {value:\"bottom\"},\n    {value:\"zoom-in\"},\n    {value:\"zoom-out\"}\n  ];\n\n  @bindable selectedEnterAnimation = \"zoom-in\";\n  @bindable selectedLeaveAnimation = \"zoom-in\";\n\n  static inject = [Element];\n  constructor(element) {\n    this.element = element;\n  }\n\n  attached(){\n    //this.selectedEnterAnimationChanged(this.selectedEnterAnimation);\n    //this.selectedLeaveAnimationChanged(this.selectedLeaveAnimation);\n\n    setTimeout(()=>SmoothScroll.scrollTo(window.location.hash),500);\n  }\n\n  openDialog(name) {\n\n    if(this[name]) {\n      this[name].transition = \"anim-\"+this.selectedEnterAnimation + \" anim-leave-\"+this.selectedLeaveAnimation;\n      this[name].open();\n    }\n  }\n\n  doSomething(){\n    alert('doing something !');\n  }\n\n  doSomethingElse(){\n    alert('doing something else !');\n  }\n\n  /*selectedEnterAnimationChanged(newValue,oldValue){\n    var dialogs = this.element.querySelectorAll('dialog');\n    for(var i = 0, l = dialogs.length; i < l; i++){\n      var obj = dialogs[i].children[0];\n      console.log('obj', obj);\n      obj.classList.remove(\"anim-\"+oldValue);\n      obj.classList.add(\"anim-\"+newValue);\n    }\n  }\n\n  selectedLeaveAnimationChanged(newValue,oldValue){\n    var dialogs = this.element.querySelectorAll('dialog');\n    for(var i = 0, l = dialogs.length; i < l; i++){\n      var obj = dialogs[i].children[0];\n      console.log('obj', obj);\n      obj.classList.remove(\"anim-leave-\"+oldValue);\n      obj.classList.add(\"anim-leave-\"+newValue);\n    }\n  }*/\n\n}\n"]}